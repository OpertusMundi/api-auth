quarkus.log.level = INFO
quarkus.log.category."eu.opertusmundi".level = INFO

# https://quarkus.io/guides/http-reference#configuring-http-access-logs
quarkus.http.access-log.enabled = true
quarkus.http.access-log.pattern = combined
#quarkus.http.access-log.pattern =  %h %l %u %t "%r" %s %Dms -- \
#  x-auth-request-redirect="%{i,x-auth-request-redirect}" x-request-id=%{i,x-request-id}
#quarkus.http.record-request-start-time = true

quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = opertusmundi
quarkus.datasource.password = 
quarkus.datasource.reactive.url = vertx-reactive:postgresql://localhost:5432/opertusmundi

quarkus.hibernate-orm.database.generation = validate
quarkus.hibernate-orm.log.sql = true

#
# https://quarkus.io/guides/security-openid-connect
#
quarkus.oidc.enabled = true
quarkus.keycloak.devservices.enabled = false
quarkus.oidc.auth-server-url =  https://keycloak.opertusmundi.192-168-1-9.nip.io:38443/auth/realms/master
quarkus.oidc.client-id = rest-auth-sub
## https://quarkus.io/guides/security-openid-connect#token-claims-and-securityidentity-roles
## note: if a path is not specified, roles will be mapped from path `realm_access.roles`
#quarkus.oidc.roles.role-claim-path = group_memb
## https://quarkus.io/guides/security-openid-connect#user-info
#quarkus.oidc.authentication.user-info-required = true
## verify the audience (`aud`) field of the JWT token (to match with an expected value)
#quarkus.oidc.token.audience = test1
